pipeline {
  agent {
    docker {
      image 'lokesh579/maven-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  
  environment {
    SONAR_URL = "http://3.92.205.104:9000"
    GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
    GIT_USER_NAME = "lokeshbodeddula"
    JAVA_HOME = "/usr/lib/jvm/java-17-openjdk-amd64"
    PATH = "${JAVA_HOME}/bin:${PATH}"
  }

  stages {
    stage('Checkout') {
      steps {
        sh 'echo "Checking out repository..."'
        git branch: 'main', url: 'https://github.com/lokeshbodeddula/Jenkins-Zero-To-Hero.git'
      }
    }

    stage('Check Java Version') {
      steps {
        sh 'java -version'
      }
    }

    stage('Build and Test') {
      steps {
        sh '''
          set -e
          echo "Listing files..."
          ls -ltr
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          echo "Building Maven project..."
          mvn clean package
        '''
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            set -e
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            echo "Running SonarQube Analysis..."
            mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "lokesh579/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          sh '''
            set -e
            echo "Building Docker image..."
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
            echo "Pushing Docker image..."
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push ${DOCKER_IMAGE}
          '''
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            set -e
            echo "Updating Kubernetes deployment file..."
            git config user.email "115606390+lokeshbodeddula@users.noreply.github.com"
            git config user.name "lokeshbodeddula"
            sed -i "s|replaceImageTag|${BUILD_NUMBER}|g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
