pipeline {
    agent {
        docker {
            image 'lokesh579/maven-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        JAVA_HOME = "/usr/lib/jvm/java-17-openjdk-amd64"
        PATH = "${JAVA_HOME}/bin:${PATH}"
        IMAGE_NAME = "lokesh579/ultimate-cicd:${BUILD_NUMBER}"
    }

    stages {
        stage('Check Java Version') {
            steps {
                sh 'java -version'
            }
        }

        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/lokeshbodeddula/Jenkins-Zero-To-Hero.git'
            }
        }

        stage('Cleanup Target Directory') {
            steps {
                sh 'rm -rf java-maven-sonar-argocd-helm-k8s/spring-boot-app/target || true'
            }
        }

        stage('Build and Test') {
            steps {
                sh '''
                cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                mvn clean package -Dmaven.clean.failOnError=false
                '''
            }
        }

        stage('SonarQube Analysis') {
            environment {
                SONAR_URL = "http://3.92.205.104:9000"
            }
            steps {
                withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                    cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                    mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    sh '''
                    cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
                    docker build -t ${IMAGE_NAME} .
                    docker push ${IMAGE_NAME}
                    '''
                }
            }
        }

        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
                GIT_USER_NAME = "lokeshbodeddula"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    sh '''
                    git config user.email "115606390+lokeshbodeddula@users.noreply.github.com"
                    git config user.name "lokeshbodeddula"
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }

    post {
        always {
            sh 'docker stop spring-boot-app || true'
            sh 'docker rm -f spring-boot-app || true'
        }
    }
}
